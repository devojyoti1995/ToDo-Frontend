[{"C:\\Users\\user\\Desktop\\ToDo Application\\frontend\\src\\index.js":"1","C:\\Users\\user\\Desktop\\ToDo Application\\frontend\\src\\components\\App.js":"2","C:\\Users\\user\\Desktop\\ToDo Application\\frontend\\src\\components\\TodoList.js":"3","C:\\Users\\user\\Desktop\\ToDo Application\\frontend\\src\\components\\ListItem.js":"4"},{"size":162,"mtime":1612212913068,"results":"5","hashOfConfig":"6"},{"size":1283,"mtime":1612255048436,"results":"7","hashOfConfig":"6"},{"size":3051,"mtime":1612280000311,"results":"8","hashOfConfig":"6"},{"size":2948,"mtime":1612212731046,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"12ceih6",{"filePath":"13","messages":"14","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"12"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"C:\\Users\\user\\Desktop\\ToDo Application\\frontend\\src\\index.js",[],["20","21"],"C:\\Users\\user\\Desktop\\ToDo Application\\frontend\\src\\components\\App.js",["22"],"import React, { useState } from \"react\";\r\nimport \"./../styles/App.css\";\r\n// import ListItem from \"./ListItem\";\r\nimport TodoList from \"./TodoList\";\r\n\r\nfunction App() {\r\n  // const [items, setItems] = useState([]);\r\n  // const [newItem, setNewItem] = useState(\"\");\r\n  // const addItem = () => {\r\n  //   items.push(newItem);\r\n  //   setItems([...items]);\r\n  //   setNewItem(\"\");\r\n  // };\r\n  // const newChangeItem = (e) => {\r\n  //   //console.log(e.target.value);\r\n  //   setNewItem(e.target.value);\r\n  // };\r\n  // const deleteHandler = (itemIdx) => {\r\n  //   items.splice(itemIdx, 1);\r\n  //   setItems([...items]);\r\n  // };\r\n  // const editTaskHandler = (editedValue, idx) => {\r\n  //   items[idx] = editedValue;\r\n  //   setItems([...items]);\r\n  // };\r\n  return (\r\n    <div id=\"main\">\r\n      <TodoList />\r\n      {/* <textarea id=\"task\" onChange={newChangeItem} value={newItem}></textarea>\r\n      <button id=\"btn\" onClick={addItem} disabled={newItem.trim().length === 0}>\r\n        Add Item\r\n      </button>\r\n      {items.map((item, idx) => (\r\n        <ListItem\r\n          item={item}\r\n          key={`${item}_${idx}`}\r\n          idx={idx}\r\n          editTask={editTaskHandler}\r\n          deleteTask={deleteHandler}\r\n        />\r\n      ))} */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\user\\Desktop\\ToDo Application\\frontend\\src\\components\\TodoList.js",[],"C:\\Users\\user\\Desktop\\ToDo Application\\frontend\\src\\components\\ListItem.js",[],{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":1,"column":17,"nodeType":"29","messageId":"30","endLine":1,"endColumn":25},"no-native-reassign",["31"],"no-negated-in-lhs",["32"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]